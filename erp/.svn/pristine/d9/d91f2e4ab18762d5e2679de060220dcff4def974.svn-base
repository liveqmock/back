<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ihk.saleunit.data.IContractRenovateMapper">

	<resultMap type="ContractRenovate" id="contractRenovateResultMap">
		<id property="id" column="id" />        
		<result property="contractId" column="contract_id" />
		<result property="payDate" column="pay_date" />
		<result property="payType" column="pay_type" />
		<result property="payName" column="pay_name" />
		<result property="payMoney" column="pay_money" />
		<result property="isDeleted" column="is_deleted" />
		<result property="createdId" column="created_id" />
		<result property="createdTime" column="created_time" />
		<result property="modId" column="mod_id" />
		<result property="modTime" column="mod_time" />
	</resultMap>

	<insert id="addContractRenovate" parameterType="ContractRenovate">
		 <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT @@IDENTITY
        </selectKey>		
		insert into contract_renovate(
		contract_id,
		pay_date,
		pay_type,
		pay_name,
		pay_money,
		is_deleted,
		created_id,
		created_time,
		mod_id,
		mod_time
		)
			VALUES(
		#{contractId},
		#{payDate},
		#{payType},
		#{payName},
		#{payMoney},
		#{isDeleted},
		#{createdId},
		#{createdTime},
		#{modId},
		#{modTime}
			)
		
	</insert>
	<delete id="deleteContractRenovate" parameterType="int">
	update contract_renovate set is_deleted='1' where id=#{id};
	</delete>
	<update id="updateContractRenovate" parameterType="int">
	update contract_renovate set 
		contract_id=#{contractId},
		pay_date=#{payDate},
		pay_type=#{payType},
		pay_name=#{payName},
		pay_money=#{payMoney},
		is_deleted=#{isDeleted},
		created_id=#{createdId},
		created_time=#{createdTime},
		mod_id=#{modId},
		mod_time=#{modTime}
	 where id=#{id}
	</update>
	<select id="findContractRenovateById" resultMap="contractRenovateResultMap">
	select * from contract_renovate where id=#{id}
	</select>
    
	<sql id="findWhereCond"> 
		<where>
		
			<if test="contractId != null and contractId != ''">
				and contract_id = #{contractId}
			</if>
			
		</where>
	</sql>
	
	<select id="findContractRenovateCount" resultType="int" parameterType="com.ihk.saleunit.data.pojo.ContractRenovateCond">
		SELECT count(0) from contract_renovate  
        <include refid="findWhereCond"/>     
    </select>
        
	<select id="findContractRenovate" resultMap="contractRenovateResultMap" parameterType="com.ihk.saleunit.data.pojo.ContractRenovateCond">
		SELECT * from  contract_renovate 
        <include refid="findWhereCond"/> 
		<if test="topNum > 0">
			limit #{topNum};
		</if>
    </select>
    
	<select id="findContractRenovatePage" resultMap="contractRenovateResultMap" parameterType="com.ihk.saleunit.data.pojo.ContractRenovateCond">
		SELECT * from  contract_renovate 
        <include refid="findWhereCond"/> 
    
		<if test="startLine >= 0">
		<if test="pageSize > 0">
			limit #{startLine},#{pageSize};
		</if>
		</if>
	</select>
</mapper>
