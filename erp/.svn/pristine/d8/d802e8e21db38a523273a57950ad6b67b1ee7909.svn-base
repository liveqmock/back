<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ihk.user.data.IRolePrivMapper">

	<resultMap type="RolePriv" id="rolePrivResultMap">
		<id property="id" column="id" />        
		<result property="roleId" column="role_id" />
		<result property="privId" column="priv_id" />
		<result property="privName" column="priv_name" />
		<result property="isHave" column="is_have" />
		<result property="isDeleted" column="is_deleted" />
		<result property="createdId" column="created_id" />
		<result property="createdTime" column="created_time" />
		<result property="modId" column="mod_id" />
		<result property="modTime" column="mod_time" />
	</resultMap>
	<resultMap type="java.util.Map" id="rolePrivMap">      
		<result property="roleId" column="id" />
		<result property="roleName" column="role_name" />
	</resultMap>

	<insert id="addRolePriv" parameterType="RolePriv">
		 <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT @@IDENTITY
        </selectKey>		
		insert into role_priv(
		role_id,
		priv_id,
		is_have,
		is_deleted,
		created_id,
		created_time,
		mod_id,
		mod_time
		)
			VALUES(
		#{roleId},
		#{privId},
		#{isHave},
		#{isDeleted},
		#{createdId},
		#{createdTime},
		#{modId},
		#{modTime}
			)
		
	</insert>
	<delete id="deleteRolePriv" parameterType="int">
	delete from role_priv where id=#{id};
	</delete>
    <delete id="deleteRolePrivByRoleId" parameterType="int">
	delete from role_priv where role_id=#{roleId};
	</delete>
    <update id="updateRolePriv" parameterType="int">
	update role_priv set 
		role_id=#{roleId},
		priv_id=#{privId},
		is_have=#{isHave},
		is_deleted=#{isDeleted},
		created_id=#{createdId},
		created_time=#{createdTime},
		mod_id=#{modId},
		mod_time=#{modTime}
	 where id=#{id}
	</update>
	<select id="findRolePrivById" resultMap="rolePrivResultMap">
	select * from role_priv where id=#{id}
	</select>
	<select id="findRolePrivByRoleId" resultMap="rolePrivResultMap">
	SELECT b.priv_name ,a.role_id,a.priv_id
	FROM role_priv a,priv b
	WHERE a.priv_id = b.id  and a.role_id=#{roleId} and a.is_deleted="0"
	</select>

	<sql id="findWhereCond"> 
    	<where>	
			<if test="privId != null and privId != ''">
				and priv_id = #{privId, jdbcType=INTEGER}
			</if>
    	<if test="roleIds!=null and roleIds.size() > 0">  
            and role_id in
            <foreach  
                collection="roleIds"  
                item="roleId"  
                open="("  
                separator=","  
                close=")">  
                #{roleId}  
            </foreach>  
      </if> 
      and is_deleted = '0' 
      </where> 
  </sql>
		
	<select id="findRolePrivCount" resultType="int" parameterType="com.ihk.user.data.pojo.RolePrivCond">
		SELECT count(0) from role_priv  
     <include refid="findWhereCond"/>   
    
    </select>
    
	<select id="findRolePrivPage" resultMap="rolePrivResultMap" parameterType="com.ihk.user.data.pojo.RolePrivCond">
		SELECT * from  role_priv 
     <include refid="findWhereCond"/>   
    
		<if test="startLine >= 0">
		<if test="pageSize > 0">
			limit #{startLine},#{pageSize};
		</if>
		</if>
	</select>

	<select id="findAll" resultMap="rolePrivResultMap">
		SELECT * from  role_priv order by role_id
	</select>
	<delete id="delBy_roleId_roleCode" parameterType="com.ihk.user.data.pojo.RolePriv">
		delete from role_priv where role_id=#{roleId} and priv_id =-1;
	</delete>
	<select id="findBy_roleId_roleCode" resultType="int" parameterType="com.ihk.user.data.pojo.RolePriv">
		SELECT count(0) from role_priv where role_id=#{roleId}  and priv_id =-1;
	</select>
	<select id="find_roleId_roleName_isHavePriv_count" resultType="int">
		select count(0) from role a where a.id in (select distinct role_id from role_priv) ;
	</select>
	<select id="find_roleId_roleName_isHavePriv" resultMap="rolePrivMap">
		select a.id,a.role_name from role a where a.id in (select distinct role_id from role_priv) ;
	</select>
	<select id="find_roleId_roleName_likeRoleName" resultMap="rolePrivMap">
		select a.id,a.role_name from role a where a.id in (select distinct role_id from role_priv) and role_name like CONCAT(CONCAT('%', #{hoo}),'%');
	</select>
</mapper>
