<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ihk.user.data.IUserRoleMapper">

	<resultMap type="UserRole" id="userRoleResultMap">
		<id property="id" column="id" />        
		<result property="roleId" column="role_id" />
		<result property="userId" column="user_id" />
		<result property="companyId" column="company_id" />
		<result property="projectId" column="project_id" />
		<result property="isDeleted" column="is_deleted" />
		<result property="createdId" column="created_id" />
		<result property="createdTime" column="created_time" />
		<result property="modId" column="mod_id" />
		<result property="modTime" column="mod_time" />
	</resultMap>
	
	<resultMap type="java.lang.Integer" id="userRoleResultMapX">
		<id property="id" column="id" /> 
	</resultMap>

	<insert id="addUserRole" parameterType="UserRole">
		 <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT @@IDENTITY
        </selectKey>		
		insert into user_role(
		role_id,
		user_id,
		company_id,
		project_id,
		is_deleted,
		created_id,
		created_time,
		mod_id,
		mod_time
		)
			VALUES(
		#{roleId},
		#{userId},		
		#{companyId},
		#{projectId},
		#{isDeleted},
		#{createdId},
		#{createdTime},
		#{modId},
		#{modTime}
			)
		
	</insert>
	
	
	<update id="deleteUserRole" parameterType="int">
		update user_role set is_deleted ='1' where id=#{id};
	</update>	
	<update id="deleteUserRoleByCond" parameterType="com.ihk.user.data.pojo.UserRoleCond">
		update user_role 	
			<if test="userId != 0 and userId != '' and userId != null">
				set is_deleted ='1',mod_id=#{operUserId},mod_time=NOW()	where user_id = #{userId, jdbcType=INTEGER}
			</if>
	</update>
	<update id="deleteUserRoleByUserIdAndRoleId" parameterType="UserRole">
		update user_role set is_deleted ='1' where user_id=#{userId} and role_id = #{roleId};
	</update>
	<update id="deleteUserRoleByUserIdAndRoleIdAndProjectId" parameterType="UserRole">
		update user_role set is_deleted ='1' where user_id=#{userId} and role_id = #{roleId} and project_id = #{projectId}; 
	</update>
	<update id="updateUserRole" parameterType="int">
	update user_role set 
		role_id=#{roleId},
		user_id=#{userId},
		company_id=#{companyId},
		project_id=#{projectId},
		is_deleted=#{isDeleted},
		created_id=#{createdId},
		created_time=#{createdTime},
		mod_id=#{modId},
		mod_time=#{modTime}
	 where id=#{id}
	</update>
	<select id="findUserRoleById" resultMap="userRoleResultMap">
	select * from user_role where id=#{id} and is_deleted = '0'
	</select>
	
	<sql id="findWhereCond">
		<where>
			<if test="userId != 0 and userId != '' and userId != null">
				and user_id = #{userId, jdbcType=INTEGER}
			</if>
			<if test="roleId != 0 and roleId != '' and roleId != null">
				and role_id = #{roleId, jdbcType=INTEGER}
			</if>
			<if test="projectId != 0 and projectId != '' and projectId != null">
				and project_id = #{projectId, jdbcType=INTEGER}
			</if>
			 and is_deleted = '0'
		</where>
	</sql>
	
	<select id="findUserRoleCount" resultType="int" parameterType="com.ihk.user.data.pojo.UserRoleCond">
		SELECT count(1) from user_role  

     <include refid="findWhereCond"/>     
    </select>
    
	<select id="findUserRolePage" resultMap="userRoleResultMap" parameterType="com.ihk.user.data.pojo.UserRoleCond">
		SELECT * from  user_role 

     <include refid="findWhereCond"/> 
    
		<if test="startLine >= 0">
		<if test="pageSize > 0">
			limit #{startLine},#{pageSize};
		</if>
		</if>
	</select>
	
	<select id="findUserRoleByUserId" resultMap="userRoleResultMap">
		select * from user_role where user_id = #{id} and is_deleted = '0'
	</select>

	<select id="findProjectIdsByUserPriv" resultMap="userRoleResultMapX"
		parameterType="com.ihk.user.data.pojo.UserRoleCond">
		select distinct project_id as id from user_role
		,company_project
		where user_id=#{userId, jdbcType=INTEGER} and project_id>0 and
		user_role.is_deleted = '0' AND user_role.project_id=company_project.id
		and role_id in
		(select role_id from role_priv where priv_id in (select id from priv where
		priv_code=#{privCode} and is_deleted = '0')
		)
	</select>

	<select id="findCompanyIdsByUserPriv" resultMap="userRoleResultMapX"
		parameterType="com.ihk.user.data.pojo.UserRoleCond">
		select distinct company_id as id from user_role ,company
		where user_id=#{userId, jdbcType=INTEGER} and company_id>0 and
		user_role.is_deleted = '0' AND user_role.company_id=company.id AND
		company.is_deleted='0' and role_id in
		(select role_id from role_priv where priv_id in (select id from priv where
		priv_code=#{privCode} and is_deleted = '0')
		)
	</select>

	<select id="findCompanyIdsByUserPriv_All" resultMap="userRoleResultMapX"
		parameterType="com.ihk.user.data.pojo.UserRoleCond">
		select distinct company_id as id from user_role ,company
		where user_id=#{userId, jdbcType=INTEGER} and company_id>0 and
		user_role.is_deleted = '0' AND user_role.company_id=company.id AND
		company.is_deleted='0' and project_id=0 and role_id in
		(select role_id from role_priv where priv_id in (select id from priv where
		priv_code=#{privCode} and is_deleted = '0')
		)
	</select>
	
	<select id="findRoleByCond" resultMap="userAccountResultMap" parameterType="com.ihk.user.data.pojo.UserRoleCond">
	SELECT
	u.*
	FROM
	user_account u
	JOIN user_role r
	ON u.id = r.user_id
	WHERE
	 r.is_deleted = 0 
	 <if test="roleId !=null and roleId != '' ">
	  AND r.role_id = #{roleId}
	 </if>
	<if test="projectIds !=null  and projectIds.size() > 0">
		AND r.project_id in
		<foreach collection="projectIds" item="cId" open="("
			separator="," close=")">
			#{cId}
		</foreach>
	</if>
	<if test="date1 != null and date1 != '' ">
		and r.created_time &gt;= #{date1}
	</if>
	<if test="date2 != null and date2 != '' ">
		and r.created_time &lt; date_add(#{date2},interval 1 day)
	</if>
	</select>

	<select id="findRoleByCondCount" resultType="int" parameterType="com.ihk.user.data.pojo.UserRoleCond">
	SELECT
	count(0)
	FROM
	user_account u
	JOIN user_role r
	ON u.id = r.user_id
	WHERE
	r.is_deleted = 0
	<if test="roleId !=null and roleId!=''">
		AND r.role_id = #{roleId}
	</if>
	<if test="projectIds !=null  and projectIds.size() > 0">
		AND r.project_id in
		<foreach collection="projectIds" item="cId" open="("
			separator="," close=")">
			#{cId}
		</foreach>
	</if>
	<if test="date1 != null and date1 != '' ">
		AND r.created_time &gt;= #{date1}
	</if>
	<if test="date2 != null and date2 != '' ">
		AND r.created_time &lt; date_add(#{date2},interval 1 day)
	</if>	
	</select>

	<update id="replaceRole" parameterType="com.ihk.user.data.pojo.UserRoleCond">
	UPDATE user_role SET role_id = #{newRoleId},mod_time = now() WHERE is_deleted = 0 AND
	role_id = #{roleId}
	<if test="projectIds !=null  and projectIds.size() > 0">
		AND project_id in
		<foreach collection="projectIds" item="cId" open="("
			separator="," close=")">
			#{cId}
		</foreach>
	</if>
	<if test="date1 != null and date1 != '' ">
		AND created_time &gt;= #{date1}
	</if>
	<if test="date2 != null and date2 != '' ">
		AND created_time &lt; date_add(#{date2},interval 1 day)
	</if>		
	</update>
	
	<select id="findProjectIdByRoleIdAndUserId"  parameterType="com.ihk.user.data.pojo.UserRoleCond" resultMap="userRoleResultMapX">
	SELECT
	project_id as id
	FROM
	user_role
	WHERE user_id = #{userId}
	AND role_id = #{roleId}
	AND is_deleted =0		
	</select>
	
	
</mapper>
