log4j.rootLogger=debug,stdout

#默认输出到控制台的appender
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss} %c :%m%n

#原则: 测试机用DEBUG,正式机用WARN.(不过在测试机,除了sql用DEBUG,其他的用WARN也是可以满足开发了)

#sql
log4j.logger.java.sql.Connection = debug
log4j.logger.java.sql.ResultSet = debug
log4j.logger.java.sql.PreparedStatement = debug

#spring
log4j.logger.org.springframework = WARN
log4j.logger.org.springframework.beans = WARN
log4j.logger.org.springframework.jdbc.datasource = debug
log4j.logger.org.springframework.jdbc.datasource.DataSourceUtils = WARN

#struts2
log4j.logger.com.opensymphony.xwork2 = WARN
log4j.logger.com.opensymphony.xwork2.config = WARN
#ognl在类型转换的时候,如果类型不一致,会有warn,但是其实并没有影响正常的流程
log4j.logger.com.opensymphony.xwork2.ognl = error;  
log4j.logger.com.opensymphony.xwork2.ognl.accessor = error;
log4j.logger.com.opensymphony.xwork2.ognl.OgnlValueStack = error;
log4j.logger.com.opensymphony.xwork2.ognl.accessor.XWorkMapPropertyAccessor = error;
log4j.logger.org.apache.struts2 = WARN
log4j.logger.org.apache.struts2.dispatcher = WARN
log4j.logger.org.apache.struts2.config = WARN

#mybatis
log4j.logger.org.apache.ibatis = debug
log4j.logger.org.mybatis.spring = WARN

#ehcache 
log4j.logger.net.sf.ehcache = WARN

#apache commons 包
log4j.logger.org.apache.commons = WARN

#freemarker 包
log4j.logger.freemarker.cache = WARN
log4j.logger.freemarker.beans = WARN

#erp 本身
log4j.logger.com.ihk.utils = WARN

